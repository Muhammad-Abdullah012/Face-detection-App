{"version":3,"sources":["Components/SignInOut/SignInOut.js","Components/SearchBox/SearchBox.js","Components/Image/Image.js","Components/Submit/Submit.js","Components/SignInForm/SignInForm.js","Components/Register/Register.js","Components/Rank/Rank.js","App.js","serviceWorker.js","index.js"],"names":["SignInOut","Changeroute","className","onClick","SearchBox","onInputChange","type","onChange","Image","box","searchField","Object","keys","length","Faces","map","face","i","key","style","left","leftCol","top","topRow","width","height","id","alt","src","Submit","onSubmit","SignInForm","props","onMailChange","event","setState","email","target","value","onPasswordChange","password","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","theUser","validUser","this","placeholder","Component","Register","firstNameChange","firstName","lastNameChange","lastName","emailChange","passwordChange","onRegister","name","Rank","entries","particleStyle","particles","shape","stroke","number","density","enable","value_area","initialState","route","initialUser","App","assign","faceIndex","faces","left_col","right_col","top_row","bottom_row","faceLocation","data","image","document","getElementById","Number","region_info","bounding_box","Arr","push","imgurl","outputs","regions","entry","catch","err","console","log","alert","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.253f5d2c.chunk.js","sourcesContent":["import React from 'react';\nimport './SignInOut.css';\nconst SignInOut = ({Changeroute}) =>\n{\n\treturn(\n\t\t<h4 className = 'SignOut' onClick = {() => { Changeroute('signin') }} >Sign Out!</h4>\n\t\t);\n}\nexport default SignInOut;","import React from 'react';\nimport './SearchBox.css';\n\n\nconst SearchBox = ({onInputChange}) =>\n{\n\treturn(\n\t\t<div className = 'SearchDiv'>\n\t\t\t<input type = 'text' className = 'SearchBox' onChange = {onInputChange}/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React from 'react';\nimport './Image.css';\nconst Image = ({ box, searchField }) =>\n{\t\n\tif(Object.keys(box).length !== 0)\n\t{\n\t\tconst Faces = box.map((face, i) => {\n\t\t\treturn <div key = {i} className = 'Box' style = {{left: box[i].leftCol, top: box[i].topRow, width: box[i].width, height: box[i].height }}></div>\n\t\t})\n\t\treturn(\n\t\t\t<div className = 'imgDiv'>\n\t\t\t\t<img id = 'image' alt = 'Pic' src = {searchField} className = 'Pic'/>\n\t\t\t\t{\n\t\t\t\t\tFaces\t\t\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\telse{\n\t\treturn(\n\t\t\t<div className = 'imgDiv'>\n\t\t\t\t<img id = 'image' alt = 'Pic' src = {searchField} className = 'Pic'/>\n\t\t\t</div>\n\t\t);\t\n\t}\n\t\t\n\n}\n\nexport default Image;","import React from 'react';\nimport './Submit.css'\nconst Submit = ({onSubmit}) =>\n{\n\treturn(\n\t\t<div className = 'submitDiv'>\n\t\t\t<button className = 'Submit' onClick = {onSubmit}>{'Detect'}</button>\n\t\t</div>\n\n\t\t);\n}\n\nexport default Submit;","import React, { Component } from 'react';\nimport './SignInForm.css';\n\nclass SignInForm extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpassword: '',\n\t\t\temail: '',\n\t\t\tvalidUser: false\n\t\t}\n\t}\n\tonMailChange = (event) => {\n\t\tthis.setState({email: event.target.value});\n\t}\n\tonPasswordChange = (event) => {\n\t\tthis.setState({password: event.target.value});\n\t}\n\tonSubmit = () => {\n\t\tfetch('https://cryptic-cove-08776.herokuapp.com/signin', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t}).then(response => response.json())\n\t\t  .then(user => {\n\t\t  \tif(user.id){\n\t\t\t\tthis.props.theUser(user);\n\t\t\t\tthis.props.Changeroute('home');\t  \t\t\n\t\t\t  }\n\t\t\telse{\n\t\t\t\tthis.setState({validUser: true});\n\t\t\t}\n\t\t  })\n\t}\n\trender(){\n\t\tconst {Changeroute} = this.props;\n\t\treturn(\n\t\t\t<div id = 'FormContainer'>\n\t\t\t\t<div id = 'SignInForm'>\n\t\t\t\t\t<div id = 'Form'>\n\t\t\t\t\t\t<h1 id = 'heading'>WELCOME</h1>\n\t\t\t\t\t\t<input type = 'email' placeholder = 'Email' id = 'email' onChange = {this.onMailChange}/>\n\t\t\t\t\t\t<input type = 'password' placeholder = 'Password' id = 'password' onChange = {this.onPasswordChange}/>\n\t\t\t\t\t\t<div id = 'btnDiv'>\n\t\t\t\t\t\t\t<button id = 'btn' onClick = {this.onSubmit} >Sign In</button>\n\t\t\t\t\t\t\t{ this.state.validUser && <div className = \"errorMsg\"><p>Invalid Credentials!</p></div> }\n\t\t\t\t\t\t\t<p>Don't have account?</p>\n\t\t\t\t\t\t\t<p id = 'Reg' onClick = {() => {Changeroute('register')}}>Register here!</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default SignInForm;","import React, { Component } from 'react';\nimport './Register.css';\n\nclass Register extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tvalidUser: false\n\t\t}\n\t}\n\tfirstNameChange = (event) => {\n\t\tthis.setState({firstName: event.target.value});\n\t}\n\tlastNameChange = (event) => {\n\t\tthis.setState({lastName: event.target.value});\n\t}\n\temailChange = (event) => {\n\t\tthis.setState({email: event.target.value});\n\t}\n\tpasswordChange = (event) => {\n\t\tthis.setState({password: event.target.value});\n\t}\n\tonRegister = () => {\n\t\tfetch('https://cryptic-cove-08776.herokuapp.com/register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-type': 'Application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.firstName + ' ' + this.state.lastName,\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t}).then(response => response.json())\n\t\t  .then(user => {\n\t\t\tif(user.id){\n\t\t\t\tthis.props.theUser(user);\n\t\t  \t\tthis.props.Changeroute('home');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.setState({validUser: true});\n\t\t\t}  \n\t\t\t})\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<div id = 'FormContainer'>\n\t\t\t\t<div id = 'Register'>\n\t\t\t\t\t<div id = 'Form'>\n\t\t\t\t\t\t<h1 id = 'heading'>WELCOME</h1>\n\t\t\t\t\t\t<input type = 'text' placeholder = 'First Name' id = 'fName' onChange = {this.firstNameChange} />\n\t\t\t\t\t\t<input type = 'text' placeholder = 'Last Name' id = 'lName' onChange = {this.lastNameChange} />\n\t\t\t\t\t\t<input type = 'email' placeholder = 'Email' id = 'email' onChange = {this.emailChange} />\n\t\t\t\t\t\t<input type = 'password' placeholder = 'Password' id = 'password' onChange = {this.passwordChange} />\n\t\t\t\t\t\t<div id = 'btnDiv'>\n\t\t\t\t\t\t\t<button id = 'btn' onClick = { this.onRegister }>Register</button>\n\t\t\t\t\t\t\t{ this.state.validUser && <div className = \"errorMsg\"><p>Please Re-check your form data!</p></div> }\n\t\t\t\t\t\t\t<p>Already have an account?</p>\n\t\t\t\t\t\t\t<p id = 'Sign' onClick = {() => {this.props.Changeroute('signin')}}>Login</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Register;","import React from 'react';\nimport './Rank.css';\n\nconst Rank = ({user}) => {\n\treturn(\n\t\t\t<div id = 'rank'>\n\t\t\t\t<h3>Hi {user.name}, Your current rank is {user.entries}.</h3>\n\t\t\t\t<p>Paste link of any image in below, it will detect any faces in it... Give it a try!</p>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Rank;","import React, {Component} from 'react';\nimport SignInOut from './Components/SignInOut/SignInOut';\nimport SearchBox from './Components/SearchBox/SearchBox';\nimport Image from './Components/Image/Image';\nimport Submit from './Components/Submit/Submit';\nimport SignInForm from './Components/SignInForm/SignInForm';\nimport Register from './Components/Register/Register';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\n\n\n\nconst particleStyle ={\n                  particles: {\n                    shape: {\n                      stroke: {\n                        width: 8\n                      }\n                    },\n                    number: {\n                      value: 150,\n                      density: {\n                        enable: true,\n                        value_area: 700\n                      }\n                    }\n                  }\n}\n\nconst initialState = {\n                        searchField: '',\n                        box: [],\n                        route: 'signin',\n                        user: {\n                          id: '',\n                          name: '',\n                          entries: 0\n                        }\n                      }\n\nconst initialUser = {\n  id: '',\n  name: '',\n  entries: 0\n}           \nclass App extends Component {\n  constructor(){\n    super()\n    this.state = initialState;\n  }\n  theUser = (user) => {\n    Object.assign(this.state.user, {id: user.id,name: user.name, entries: user.entries });\n  }\n  faceIndex = (faces, i,width,height) => {\n    return {\n      leftCol: faces[i].left_col * width,\n      width: (faces[i].right_col * width) - (faces[i].left_col * width),  \n      topRow: faces[i].top_row * height,\n      height: (faces[i].bottom_row * height) - (faces[i].top_row * height)\n    }\n  }\n  faceLocation = (data) => {\n    const image = document.getElementById('image');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const faces = data.map((data, i) => {\n      return data.region_info.bounding_box;\n    })\n    const Arr = [];\n    for( let i = 0; i < faces.length ; i++){\n      Arr.push(this.faceIndex(faces, i,width,height));  \n    }\n    this.setState({box: Arr});\n  }\n  onSubmit = () =>{ \n    fetch('https://cryptic-cove-08776.herokuapp.com/imgurl',{\n      method: 'post',\n      headers: {'Content-type': 'Application/json'},\n      body: JSON.stringify({\n        imgurl: this.state.searchField\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      if(Object.keys(data.outputs[0].data).length > 0 ){\n          this.faceLocation(data.outputs[0].data.regions);\n          fetch('https://cryptic-cove-08776.herokuapp.com/image', {\n              method: 'put',\n              headers: {'Content-type': 'Application/json'},\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n            .then(response => response.json())\n            .then(entry => {\n              Object.assign(this.state.user, {entries: entry})\n              this.setState(this.state);\n            })\n            .catch(err => {\n              console.log(err);\n            })\n        }\n        else{\n          alert(\"No Face detected!!!\");\n          this.setState({box: []});\n        }\n       })\n       .catch((err) => { console.log(err); });\n }\n  onInputChange = (event) => { \n    this.setState({searchField: event.target.value});\n  }\n  Changeroute = (value ) => {\n    this.setState({route: value});\n    if(value === 'signin'){\n      Object.assign(this.state.user, initialUser);\n      this.setState(initialState);\n    }\n    \n  }\n  \n  render(){\n    console.log(\"Render Run!\");\n    let route = this.state.route;\n    switch(route){\n      case 'signin':\n        return(\n        <div>\n          <Particles params={ particleStyle } className = 'particle'/>\n          <SignInForm theUser = {this.theUser} Changeroute = {this.Changeroute} />\n        </div>\n        );\n      case 'register':\n        return(\n        <div>\n          <Particles params={ particleStyle } className = 'particle'/>\n          <Register theUser = {this.theUser} Changeroute = {this.Changeroute} />\n        </div>\n        );\n      default:\n        return(\n          <div className=\"App\">\n            <Particles params={ particleStyle } className = 'particle'/>\n            <div className = 'Sign'>\n              <SignInOut Changeroute = {this.Changeroute} />\n            </div>\n            <h1 id = 'h1' >Face Detection</h1>\n            <Rank user = {this.state.user} />\n            <div className = 'div'>\n              <div className = 'mainDiv'>\n                  <div className = 'innerDiv'>\n                    <SearchBox onInputChange = { this.onInputChange } />\n                    <Submit onSubmit = {this.onSubmit} />\n                  </div>\n              </div>\n                <Image box = {this.state.box} searchField = {this.state.searchField}/>\n            </div> \n          </div>\n        );\n    }\n    \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}